//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// User function Template for C++

class Solution{
    public:
  int ks(int i,int wt[],int val[],int weight, vector<vector<int>> &dp){
        
        if(i < 0) return 0;
        
        if(dp[i][weight] != -1) return dp[i][weight];
        
        int take = 0;
        
        if(weight >= wt[i])
            take = val[i] + ks(i,wt,val,weight-wt[i],dp);
            
        int not_take = ks(i-1,wt,val,weight,dp);
        
        return dp[i][weight] = max(take,not_take);
    }
    int knapSack(int N, int W, int val[], int wt[])
    {
        vector<vector<int>> dp(N+1,vector<int>(W+1,-1));
        return ks(N-1,wt,val,W,dp);
    }
};

//{ Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int N, W;
        cin>>N>>W;
        int val[N], wt[N];
        for(int i = 0;i < N;i++)
            cin>>val[i];
        for(int i = 0;i < N;i++)
            cin>>wt[i];
        
        Solution ob;
        cout<<ob.knapSack(N, W, val, wt)<<endl;
    }
    return 0;
}
// } Driver Code Ends
