class Solution {
     int M = 1e9+7;
    int solve(int size ,int cell,vector<vector<int>>&adj,vector<vector<int>>&dp){
        if(size == 0)return 1;

        if(dp[size][cell] != -1)return dp[size][cell];

        int result = 0;

        for(auto &i : adj[cell]){
            result=(result+solve(size-1,i,adj,dp))%M;
        }
        return dp[size][cell]=result;
    }
public:
    int knightDialer(int n) {
    vector<vector<int>> adj = {
        {4, 6},
        {6, 8},
        {7, 9},
        {4, 8},
        {3, 9, 0},
        {},
        {1, 7, 0},
        {2, 6},
        {1, 3},
        {2, 4}
    };
   int ans = 0;
    vector<vector<int>>dp(5001,vector<int>(10,-1));
    for(int cell = 0; cell <= 9 ;cell++){
        ans = (ans+solve(n-1,cell,adj,dp)) % M;
    }
    return ans;
    }
};
