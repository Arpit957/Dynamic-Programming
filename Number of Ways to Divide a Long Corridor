class Solution {
       int mod=1e9+7;
    int solve(string &s,int i,int n,int count,vector<vector<int>>&dp){
           if(count > 2)return 0;
           if(i>=n){
               if(count==2)return 1;
               else return 0;
           }
           if(dp[i][count]!= -1)return dp[i][count];
           if(s[i]=='S')count++;
          // if(count>2)return 0;
           int ans = 0;
           ans = solve(s,i+1,n,count,dp);
           if(count == 2){
               ans = ans + solve(s,i+1,n,0,dp)%mod;
           }

           return dp[i][count]=ans%mod;
       }
public:
    int numberOfWays(string corridor) {
         int n=corridor.size();
         vector<vector<int>>dp(n+1,vector<int>(4,-1));
        int count=0;
        for(int i=0;i<n;i++)
        {
            if(corridor[i]=='S')
            {
                count++;
            }
        }
        if(count%2!=0)
        {
            return 0;
        }
         count=0;
        return solve(corridor , 0 , n , count,dp);
    }
};
